#
# Akypuera 
#

Akypuera is a tracing library for MPI applications released under GPLv3.
The library, simplified as aky (linked with -laky to mpi apps), uses 
libRastro to provide a low memory footprint and low intrusion. The binary
trace files are converted to paje file format using the tool called
aky_converter. Akypuera is a word from the tupi language that means trace.

The mpi applications can be linked with libaky this way:
$ mpicc source_file.c -o mpi_app -laky 
or
$ mpicc -c source_file.c
$ mpicc source_file.o -o mpi_app -laky

You might want to specify the LD_LIBRARY_PATH to contain the path to libaky.so,
in order to execute the mpi application. The execution will create a trace file
for each mpi process. A run with 3 processes generate this list of files:
rastro-0-0.rst
rastro-1-0.rst
rastro-2-0.rst
There files are converted to the paje generic format using the following
program, passing as parameter all the rst files generated by the mpi execution.
The corresponding paje trace file is printed on stdout.
$ aky_converter rastro*.rst

# tau2paje (created if tau is found by akypuera cmake)

tau2paje is a simple converter from tau format file to paje's generic file
format. The tau traces must have been generated with the execution of a mpi
compilation compiled with tau_compiler (with mpi support). Since such execution
generates as many files as the number of processes, these files must be merged
using tau_merge. After that, execute tau2paje passing the single trc file
followed by the single edf file.  The corresponding paje trace file is
printed on stdout. Every MPI operation (with the exception of MPI_Init and
MPI_Finalize) are transformed in a paje state.

To get tau traces, download the last version of tau, from
http://tau.uoregon.edu/tau.tgz
Configure it using the following parameters to configure script:
 -mpiinc=/usr/lib/openmpi/include/ \
 -mpilib=/usr/lib/openmpi/lib/ \
 -TRACE \
 -MPITRACE
and then install it. The installation creates a Makefile tuned to your 
environment. It is usually placed in the lib installation directory, and
it is required to compile the mpi application to be traced. You have to specify
the path to this makefile using the environment variable TAU_MAKEFILE, like this
export TAU_MAKEFILE=/path/to/your/Makefile..tau-mpi-trace-mpitrace
After that,, just compile your application using tau_cc. The execution is
maked as usual with mpirun. An execution with 3 mpi processes creates:
tautrace.0.0.0.trc
tautrace.1.0.0.trc
tautrace.2.0.0.trc
events.0.edf
events.1.edf
events.2.edf
These files have to be merged in order to be used by tau2paje.
To merge and convert them to paje, execute tau_merge and tau2paje this way:
$ tau_merge -e events.*.edf -m merged.edf tautrace.*.trc merged.trc
$ tau2paje merged.trc merged.edf
